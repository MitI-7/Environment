# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.boot_timeout = 3600

  # ansible controller
  config.vm.define :ansible do |node|
    node.vm.box = "debian/jessie64"
    node.vm.hostname = "ansible"
    node.vm.network :forwarded_port, guest: 22, host: 2226, id: "ssh"
    node.vm.network :private_network, ip: "192.168.33.11", virtualbox__intnet: "intnet"
    node.vm.synced_folder ".", "/home/vagrant/sync", disabled: true
    
    node.vm.provision "shell", privileged: false, inline: <<-SHELL
      sudo apt-get update -y
      sudo apt-get install python-pip -y
      sudo apt-get install -y python-dev libffi-dev libssl-dev
      sudo apt-get install git -y
      sudo apt-get install python-apt -y
      sudo pip install pip --upgrade
      sudo pip install ansible
      sudo pip install --upgrade ansible
      
      HOME=/home/vagrant
      
      if [ ! -e $HOME/environment ]; then
        git clone https://github.com/MitI-7/Environment.git $HOME/environment
        mv $HOME/environment/vm/develop/ansible $HOME/ansible
      fi
      if [ ! -e $HOME/ansible/playbooks/roles/tersmitten.pycharm ]; then
        ansible-galaxy install tersmitten.pycharm -p $HOME/ansible/playbooks/roles
      fi
      if [ ! -e $HOME/ansible/playbooks/roles/cmprescott.chrome ]; then
        ansible-galaxy install cmprescott.chrome -p $HOME/ansible/playbooks/roles
      fi
      if [ ! -e $HOME/ansible/playbooks/roles/gantsign.atom ]; then
        ansible-galaxy install gantsign.atom -p $HOME/ansible/playbooks/roles
      fi
    SHELL
  end

  # develop
  config.vm.define :develop do |node|
    node.vm.box = "debian/jessie64"
    node.vm.hostname = "develop"
    node.vm.network :forwarded_port, guest: 22, host: 2227, id: "ssh"
    node.vm.network :private_network, ip: "192.168.33.12", virtualbox__intnet: "intnet"
    node.vm.synced_folder ".", "/home/vagrant/sync", disabled: true
  end


  config.vm.provider "virtualbox" do |vb|
    vb.gui = true
    vb.memory = "16384"
    vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
  end  

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080


  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  


  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

end
